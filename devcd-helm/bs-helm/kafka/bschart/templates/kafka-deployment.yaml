apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.kafka.image }}
        imagePullPolicy: {{ .Values.kafka.imagePullPolicy }}
        resources:
          requests:
            memory: {{ .Values.kafka.resources.requests.memory }}        
          limits:
            memory: {{ .Values.kafka.resources.limits.memory }}
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "{{ .Values.zookeeper.serviceName }}:{{ .Values.zookeeper.ports.svcPort }}"
        - name: KAFKA_CFG_LISTENERS
          value: PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092,INTERNAL://kafka:29092
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        ports:
        - containerPort: {{ .Values.kafka.ports.containerPort}}
        - containerPort: {{ .Values.kafka.ports.containerIntPort}}
        volumeMounts:
        - mountPath: /bitnami
          name: kafka-data
      volumes:
      - name: kafka-data
        hostPath:
          path: "{{ .Values.CWD }}/{{ .Values.kafka.data.path }}"
